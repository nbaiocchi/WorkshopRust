{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6","program":"/home/korocouille/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","random_number","--edition=2018","/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e38cd57b07cd5a73","-C","extra-filename=-e38cd57b07cd5a73","--out-dir","/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps","-L","dependency=/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps","--extern","proc_macro_hack=/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps/libproc_macro_hack-07e06cc68c6f5837.so","--extern","rand=/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps/librand-039f26eb45543b74.rmeta","--extern","random_number_macro_impl=/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps/librandom_number_macro_impl-2ed96b86a4521cd6.so","--cap-lints","allow","--error-format=json","--sysroot","/home/korocouille/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/korocouille/Epitech/Perso/Rust/Alpha001/project1/target/rls/debug/deps/librandom_number-e38cd57b07cd5a73.rmeta"},"prelude":{"crate_id":{"name":"random_number","disambiguator":[15915847602353418032,0]},"crate_root":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src","external_crates":[{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":20,"id":{"name":"rand","disambiguator":[4931464322775453611,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":21,"id":{"name":"rand_core","disambiguator":[1835106072631209659,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":22,"id":{"name":"getrandom","disambiguator":[16591478038776916527,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[15967550852856567583,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":25,"id":{"name":"rand_chacha","disambiguator":[17472773209762754167,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":26,"id":{"name":"ppv_lite86","disambiguator":[2933753580364552420,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":27,"id":{"name":"random_number_macro_impl","disambiguator":[805805146454048827,0]}},{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","num":28,"id":{"name":"proc_macro_hack","disambiguator":[17424201031022968248,0]}}],"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":0,"byte_end":9506,"line_start":1,"line_end":539,"column_start":1,"column_end":47}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":2303,"byte_end":2310,"line_start":113,"line_end":113,"column_start":18,"column_end":25},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":2343,"byte_end":2344,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":2372,"byte_end":2373,"line_start":115,"line_end":115,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":43},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":5277,"byte_end":5283,"line_start":291,"line_end":291,"column_start":35,"column_end":41},"alias_span":null,"name":"_proc_macro_hack_random","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":53},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":9494,"byte_end":9505,"line_start":539,"line_end":539,"column_start":35,"column_end":46},"alias_span":null,"name":"_proc_macro_hack_random_fill","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":0,"byte_end":9506,"line_start":1,"line_end":539,"column_start":1,"column_end":47},"name":"","qualname":"::","value":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":17},{"krate":0,"index":109},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":257}],"decl_id":null,"docs":"# Random Number","sig":null,"attributes":[{"value":"*\n# Random Number\n\nGenerate random numbers quickly.\n\n### The `random!` Marco\n\n```rust\n#[macro_use] extern crate random_number;\n\nlet n: u8 = random!();\nprintln!(\"{}\", n); // 0 ~ 255\n\nlet n: f64 = random!();\nprintln!(\"{}\", n); // 0.0 ~ 1.0\n\nlet n: u8 = random!(..=10);\nprintln!(\"{}\", n); // 0 ~ 10\n\nlet n: u8 = random!(..=9);\nprintln!(\"{}\", n); // 0 ~ 9\n\nlet n: u8 = random!(10..);\nprintln!(\"{}\", n); // 10 ~ 255\n\nlet n: i8 = random!(-2..=12);\nprintln!(\"{}\", n); // -2 ~ 12\n\nlet n: u8 = random!(12, 20);\nprintln!(\"{}\", n); // 12 ~ 20\n\nlet n: u8 = random!(20, 12);\nprintln!(\"{}\", n); // 12 ~ 20\n```\n\nThe random number generator can be reused by adding it to the `random!` macro as the last argument.\n\n```rust\n#[macro_use] extern crate random_number;\n\nlet mut rng = random_number::rand::thread_rng();\n\nlet n: u8 = random!(rng);\nprintln!(\"{}\", n); // 0 ~ 255\n\nlet n: u8 = random!(..=10, rng);\nprintln!(\"{}\", n); // 0 ~ 10\n\nlet n: u8 = random!(20, 12, rng);\nprintln!(\"{}\", n); // 12 ~ 20\n```\n\n### The `random_ranged` Function\n\nIf the **range** is not literal, for example, a variable, `var_range`, storing an instance that implements the `RangeBounds` trait, the `var_range` variable cannot be used in the `random!` macro.\n\n```rust,ignore\n#[macro_use] extern crate random_number;\n\nlet var_range = 1..=10;\n\nlet n: u8 = random!(var_range); // compile error\n```\n\nIn this case, use the `random_ranged` function instead.\n\n```rust\nextern crate random_number;\n\nlet var_range = 1..=10;\n\nlet n: u8 = random_number::random_ranged(var_range);\nprintln!(\"{}\", n); // 1 ~ 10\n```\n\n### The `random_fill!` Marco\n\nThe `random_fill!` marco can be used to fill a slice with random numbers. The usage is like the `random!` macro. Just add a slice as the first argument when using the `random_fill!` macro.\n\n```rust\n#[macro_use] extern crate random_number;\n\nlet mut a = [0i8; 32];\nrandom_fill!(a, -2..=12);\n\nprintln!(\"{:?}\", a);\n```\n\n### The `random_fill_ranged` Function\n\n```rust\nextern crate random_number;\n\nlet var_range = 1..=10;\n\nlet mut a = [0u8; 32];\nrandom_number::random_fill_ranged(&mut a, var_range);\n\nprintln!(\"{:?}\", a);\n```\n*/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/lib.rs","byte_start":0,"byte_end":2114,"line_start":1,"line_end":101,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/bounded.rs","byte_start":9559,"byte_end":9566,"line_start":2,"line_end":2,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounded::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" The random range of different types.\n","sig":null,"attributes":[{"value":"/ The random range of different types.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/bounded.rs","byte_start":9508,"byte_end":9548,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/bounded.rs","byte_start":9576,"byte_end":9585,"line_start":3,"line_end":3,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounded::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/bounded.rs","byte_start":9604,"byte_end":9613,"line_start":4,"line_end":4,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounded::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":10918,"byte_end":10941,"line_start":14,"line_end":14,"column_start":8,"column_end":31},"name":"random_fill_exclusively","qualname":"::random_fill_functions::random_fill_exclusively","value":"pub fn random_fill_exclusively<X: SampleUniform, B1: SampleBorrow<X>,\n                               B2: SampleBorrow<X>>(&mut [X], B1, B2)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":10726,"byte_end":10858,"line_start":10,"line_end":10,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":10859,"byte_end":10862,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Panics if `min >= max_exclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":10863,"byte_end":10900,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":10901,"byte_end":10910,"line_start":13,"line_end":13,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11312,"byte_end":11344,"line_start":26,"line_end":26,"column_start":8,"column_end":40},"name":"random_fill_exclusively_with_rng","qualname":"::random_fill_functions::random_fill_exclusively_with_rng","value":"pub fn random_fill_exclusively_with_rng<X: SampleUniform, B1: SampleBorrow<X>,\n                                        B2: SampleBorrow<X>,\n                                        T: Rng>(&mut [X], B1, B2, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `max_exclusive`) with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `max_exclusive`) with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11146,"byte_end":11252,"line_start":22,"line_end":22,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11253,"byte_end":11256,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Panics if `min >= max_exclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11257,"byte_end":11294,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11295,"byte_end":11304,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11826,"byte_end":11849,"line_start":48,"line_end":48,"column_start":8,"column_end":31},"name":"random_fill_inclusively","qualname":"::random_fill_functions::random_fill_inclusively","value":"pub fn random_fill_inclusively<X: SampleUniform, B1: SampleBorrow<X>,\n                               B2: SampleBorrow<X>>(&mut [X], B1, B2)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11635,"byte_end":11767,"line_start":44,"line_end":44,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11768,"byte_end":11771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Panics if `min > max_inclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11772,"byte_end":11808,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":11809,"byte_end":11818,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12220,"byte_end":12252,"line_start":60,"line_end":60,"column_start":8,"column_end":40},"name":"random_fill_inclusively_with_rng","qualname":"::random_fill_functions::random_fill_inclusively_with_rng","value":"pub fn random_fill_inclusively_with_rng<X: SampleUniform, B1: SampleBorrow<X>,\n                                        B2: SampleBorrow<X>,\n                                        T: Rng>(&mut [X], B1, B2, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `max_inclusive`] with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `max_inclusive`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12055,"byte_end":12161,"line_start":56,"line_end":56,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12162,"byte_end":12165,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Panics if `min > max_inclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12166,"byte_end":12202,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12203,"byte_end":12212,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12810,"byte_end":12837,"line_start":83,"line_end":83,"column_start":8,"column_end":35},"name":"random_fill_inclusively_cmp","qualname":"::random_fill_functions::random_fill_inclusively_cmp","value":"pub fn random_fill_inclusively_cmp<X: SampleUniform + Ord + Clone,\n                                   B: SampleBorrow<X>>(&mut [X], B, B)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`a`, `b`] or [`b`, `a`] with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`a`, `b`] or [`b`, `a`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12613,"byte_end":12745,"line_start":79,"line_end":79,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12746,"byte_end":12749,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Panics if a and b can not be compared.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12750,"byte_end":12792,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":12793,"byte_end":12802,"line_start":82,"line_end":82,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13133,"byte_end":13169,"line_start":93,"line_end":93,"column_start":8,"column_end":44},"name":"random_fill_inclusively_cmp_with_rng","qualname":"::random_fill_functions::random_fill_inclusively_cmp_with_rng","value":"pub fn random_fill_inclusively_cmp_with_rng<X: SampleUniform + Ord + Clone,\n                                            B: SampleBorrow<X>,\n                                            T: Rng>(&mut [X], B, B, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`a`, `b`] or [`b`, `a`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range [`a`, `b`] or [`b`, `a`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13009,"byte_end":13115,"line_start":91,"line_end":91,"column_start":1,"column_end":107}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13116,"byte_end":13125,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13785,"byte_end":13796,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"random_fill","qualname":"::random_fill_functions::random_fill","value":"pub fn random_fill<X: SampleUniform + Bounded>(&mut [X])","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range of the output type with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range of the output type with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13641,"byte_end":13767,"line_start":114,"line_end":114,"column_start":1,"column_end":127}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13768,"byte_end":13777,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14012,"byte_end":14032,"line_start":122,"line_end":122,"column_start":8,"column_end":28},"name":"random_fill_with_rng","qualname":"::random_fill_functions::random_fill_with_rng","value":"pub fn random_fill_with_rng<X: SampleUniform + Bounded,\n                            T: Rng>(&mut [X], &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range of the output type with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range of the output type with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13894,"byte_end":13994,"line_start":120,"line_end":120,"column_start":1,"column_end":101}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":13995,"byte_end":14004,"line_start":121,"line_end":121,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14339,"byte_end":14359,"line_start":128,"line_end":128,"column_start":8,"column_end":28},"name":"random_fill_at_least","qualname":"::random_fill_functions::random_fill_at_least","value":"pub fn random_fill_at_least<X: SampleUniform + Bounded,\n                            B: SampleBorrow<X>>(&mut [X], B)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `Bounded::max_value()`] with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `Bounded::max_value()`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14182,"byte_end":14321,"line_start":126,"line_end":126,"column_start":1,"column_end":140}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14322,"byte_end":14331,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14625,"byte_end":14654,"line_start":134,"line_end":134,"column_start":8,"column_end":37},"name":"random_fill_at_least_with_rng","qualname":"::random_fill_functions::random_fill_at_least_with_rng","value":"pub fn random_fill_at_least_with_rng<X: SampleUniform + Bounded,\n                                     B: SampleBorrow<X>,\n                                     T: Rng>(&mut [X], B, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`min`, `X::max_value()`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range [`min`, `X::max_value()`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14500,"byte_end":14607,"line_start":132,"line_end":132,"column_start":1,"column_end":108}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14608,"byte_end":14617,"line_start":133,"line_end":133,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14997,"byte_end":15016,"line_start":144,"line_end":144,"column_start":8,"column_end":27},"name":"random_fill_at_most","qualname":"::random_fill_functions::random_fill_at_most","value":"pub fn random_fill_at_most<X: SampleUniform + Bounded,\n                           B: SampleBorrow<X>>(&mut [X], B)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`X::min_value()`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range [`X::min_value()`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14836,"byte_end":14979,"line_start":142,"line_end":142,"column_start":1,"column_end":144}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":14980,"byte_end":14989,"line_start":143,"line_end":143,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":91},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15322,"byte_end":15350,"line_start":153,"line_end":153,"column_start":8,"column_end":36},"name":"random_fill_at_most_with_rng","qualname":"::random_fill_functions::random_fill_at_most_with_rng","value":"pub fn random_fill_at_most_with_rng<X: SampleUniform + Bounded,\n                                    B: SampleBorrow<X>,\n                                    T: Rng>(&mut [X], B, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`X::min_value()`, `max_inclusive`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate random values in the range [`X::min_value()`, `max_inclusive`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15187,"byte_end":15304,"line_start":151,"line_end":151,"column_start":1,"column_end":118}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15305,"byte_end":15314,"line_start":152,"line_end":152,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15764,"byte_end":15795,"line_start":165,"line_end":165,"column_start":8,"column_end":39},"name":"random_fill_at_most_exclusively","qualname":"::random_fill_functions::random_fill_at_most_exclusively","value":"pub fn random_fill_at_most_exclusively<X: SampleUniform + Bounded,\n                                       B: SampleBorrow<X>>(&mut [X], B)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`X::min_value()`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`X::min_value()`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15552,"byte_end":15695,"line_start":161,"line_end":161,"column_start":1,"column_end":144}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15696,"byte_end":15699,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Panics if X::min_value() == max_exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15700,"byte_end":15746,"line_start":163,"line_end":163,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15747,"byte_end":15756,"line_start":164,"line_end":164,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16164,"byte_end":16204,"line_start":176,"line_end":176,"column_start":8,"column_end":48},"name":"random_fill_at_most_exclusively_with_rng","qualname":"::random_fill_functions::random_fill_at_most_exclusively_with_rng","value":"pub fn random_fill_at_most_exclusively_with_rng<X: SampleUniform + Bounded,\n                                                B: SampleBorrow<X>,\n                                                T: Rng>(&mut [X], B, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in the range [`X::min_value()`, `max_exclusive`) with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in the range [`X::min_value()`, `max_exclusive`) with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":15978,"byte_end":16095,"line_start":172,"line_end":172,"column_start":1,"column_end":118}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16096,"byte_end":16099,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Panics if X::min_value() == max_exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16100,"byte_end":16146,"line_start":174,"line_end":174,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16147,"byte_end":16156,"line_start":175,"line_end":175,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16601,"byte_end":16619,"line_start":192,"line_end":192,"column_start":8,"column_end":26},"name":"random_fill_ranged","qualname":"::random_fill_functions::random_fill_ranged","value":"pub fn random_fill_ranged<X: SampleUniform + Bounded,\n                          R: RangeBounds<X>>(&mut [X], R)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in a specific range with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in a specific range with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16421,"byte_end":16535,"line_start":188,"line_end":188,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16536,"byte_end":16539,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Panics if the start bound is exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16540,"byte_end":16583,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16584,"byte_end":16593,"line_start":191,"line_end":191,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16914,"byte_end":16941,"line_start":200,"line_end":200,"column_start":8,"column_end":35},"name":"random_fill_ranged_with_rng","qualname":"::random_fill_functions::random_fill_ranged_with_rng","value":"pub fn random_fill_ranged_with_rng<X: SampleUniform + Bounded,\n                                   R: RangeBounds<X>,\n                                   T: Rng>(&mut [X], R, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Generate random values in a specific range with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate random values in a specific range with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16760,"byte_end":16848,"line_start":196,"line_end":196,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16849,"byte_end":16852,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Panics if the start bound is exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16853,"byte_end":16896,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_fill_functions.rs","byte_start":16897,"byte_end":16906,"line_start":199,"line_end":199,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18642,"byte_end":18660,"line_start":14,"line_end":14,"column_start":8,"column_end":26},"name":"random_exclusively","qualname":"::random_functions::random_exclusively","value":"pub fn random_exclusively<X: SampleUniform, B1: SampleBorrow<X>,\n                          B2: SampleBorrow<X>>(B1, B2) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18449,"byte_end":18582,"line_start":10,"line_end":10,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18583,"byte_end":18586,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Panics if `min >= max_exclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18587,"byte_end":18624,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18625,"byte_end":18634,"line_start":13,"line_end":13,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19008,"byte_end":19035,"line_start":25,"line_end":25,"column_start":8,"column_end":35},"name":"random_exclusively_with_rng","qualname":"::random_functions::random_exclusively_with_rng","value":"pub fn random_exclusively_with_rng<X: SampleUniform, B1: SampleBorrow<X>,\n                                   B2: SampleBorrow<X>,\n                                   T: Rng>(B1, B2, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `max_exclusive`) with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `max_exclusive`) with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18841,"byte_end":18948,"line_start":21,"line_end":21,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18949,"byte_end":18952,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Panics if `min >= max_exclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18953,"byte_end":18990,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":18991,"byte_end":19000,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19458,"byte_end":19476,"line_start":44,"line_end":44,"column_start":8,"column_end":26},"name":"random_inclusively","qualname":"::random_functions::random_inclusively","value":"pub fn random_inclusively<X: SampleUniform, B1: SampleBorrow<X>,\n                          B2: SampleBorrow<X>>(B1, B2) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19266,"byte_end":19399,"line_start":40,"line_end":40,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19400,"byte_end":19403,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Panics if `min > max_inclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19404,"byte_end":19440,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19441,"byte_end":19450,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19823,"byte_end":19850,"line_start":55,"line_end":55,"column_start":8,"column_end":35},"name":"random_inclusively_with_rng","qualname":"::random_functions::random_inclusively_with_rng","value":"pub fn random_inclusively_with_rng<X: SampleUniform, B1: SampleBorrow<X>,\n                                   B2: SampleBorrow<X>,\n                                   T: Rng>(B1, B2, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `max_inclusive`] with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `max_inclusive`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19657,"byte_end":19764,"line_start":51,"line_end":51,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19765,"byte_end":19768,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Panics if `min > max_inclusive`.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19769,"byte_end":19805,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":19806,"byte_end":19815,"line_start":54,"line_end":54,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20261,"byte_end":20283,"line_start":72,"line_end":72,"column_start":8,"column_end":30},"name":"random_inclusively_cmp","qualname":"::random_functions::random_inclusively_cmp","value":"pub fn random_inclusively_cmp<X: SampleUniform + Ord + Clone,\n                              B: SampleBorrow<X>>(B, B) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`a`, `b`] or [`b`, `a`] with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`a`, `b`] or [`b`, `a`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20063,"byte_end":20196,"line_start":68,"line_end":68,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20197,"byte_end":20200,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Panics if a and b can not be compared.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20201,"byte_end":20243,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20244,"byte_end":20253,"line_start":71,"line_end":71,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":164},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20544,"byte_end":20575,"line_start":78,"line_end":78,"column_start":8,"column_end":39},"name":"random_inclusively_cmp_with_rng","qualname":"::random_functions::random_inclusively_cmp_with_rng","value":"pub fn random_inclusively_cmp_with_rng<X: SampleUniform + Ord + Clone,\n                                       B: SampleBorrow<X>,\n                                       T: Rng>(B, B, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`a`, `b`] or [`b`, `a`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`a`, `b`] or [`b`, `a`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20419,"byte_end":20526,"line_start":76,"line_end":76,"column_start":1,"column_end":108}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20527,"byte_end":20536,"line_start":77,"line_end":77,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21073,"byte_end":21079,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"random","qualname":"::random_functions::random","value":"pub fn random<X: SampleUniform + Bounded>() -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range of the output type with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range of the output type with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":20928,"byte_end":21055,"line_start":94,"line_end":94,"column_start":1,"column_end":128}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21056,"byte_end":21065,"line_start":95,"line_end":95,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21278,"byte_end":21293,"line_start":102,"line_end":102,"column_start":8,"column_end":23},"name":"random_with_rng","qualname":"::random_functions::random_with_rng","value":"pub fn random_with_rng<X: SampleUniform + Bounded, T: Rng>(&mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range of the output type with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range of the output type with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21159,"byte_end":21260,"line_start":100,"line_end":100,"column_start":1,"column_end":102}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21261,"byte_end":21270,"line_start":101,"line_end":101,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21580,"byte_end":21595,"line_start":108,"line_end":108,"column_start":8,"column_end":23},"name":"random_at_least","qualname":"::random_functions::random_at_least","value":"pub fn random_at_least<X: SampleUniform + Bounded, B: SampleBorrow<X>>(B) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `Bounded::max_value()`] with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `Bounded::max_value()`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21422,"byte_end":21562,"line_start":106,"line_end":106,"column_start":1,"column_end":141}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21563,"byte_end":21572,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21841,"byte_end":21865,"line_start":114,"line_end":114,"column_start":8,"column_end":32},"name":"random_at_least_with_rng","qualname":"::random_functions::random_at_least_with_rng","value":"pub fn random_at_least_with_rng<X: SampleUniform + Bounded,\n                                B: SampleBorrow<X>, T: Rng>(B, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`min`, `X::max_value()`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`min`, `X::max_value()`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21715,"byte_end":21823,"line_start":112,"line_end":112,"column_start":1,"column_end":109}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":21824,"byte_end":21833,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22184,"byte_end":22198,"line_start":123,"line_end":123,"column_start":8,"column_end":22},"name":"random_at_most","qualname":"::random_functions::random_at_most","value":"pub fn random_at_most<X: SampleUniform + Bounded, B: SampleBorrow<X>>(B) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`X::min_value()`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`X::min_value()`, `max_inclusive`] with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22022,"byte_end":22166,"line_start":121,"line_end":121,"column_start":1,"column_end":145}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22167,"byte_end":22176,"line_start":122,"line_end":122,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22473,"byte_end":22496,"line_start":129,"line_end":129,"column_start":8,"column_end":31},"name":"random_at_most_with_rng","qualname":"::random_functions::random_at_most_with_rng","value":"pub fn random_at_most_with_rng<X: SampleUniform + Bounded, B: SampleBorrow<X>,\n                               T: Rng>(B, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`X::min_value()`, `max_inclusive`] with an existing random number generator.\n","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`X::min_value()`, `max_inclusive`] with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22337,"byte_end":22455,"line_start":127,"line_end":127,"column_start":1,"column_end":119}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22456,"byte_end":22465,"line_start":128,"line_end":128,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22886,"byte_end":22912,"line_start":140,"line_end":140,"column_start":8,"column_end":34},"name":"random_at_most_exclusively","qualname":"::random_functions::random_at_most_exclusively","value":"pub fn random_at_most_exclusively<X: SampleUniform + Bounded,\n                                  B: SampleBorrow<X>>(B) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`X::min_value()`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`X::min_value()`, `max_exclusive`) with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22673,"byte_end":22817,"line_start":136,"line_end":136,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22818,"byte_end":22821,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Panics if X::min_value() == max_exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22822,"byte_end":22868,"line_start":138,"line_end":138,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":22869,"byte_end":22878,"line_start":139,"line_end":139,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23257,"byte_end":23292,"line_start":150,"line_end":150,"column_start":8,"column_end":43},"name":"random_at_most_exclusively_with_rng","qualname":"::random_functions::random_at_most_exclusively_with_rng","value":"pub fn random_at_most_exclusively_with_rng<X: SampleUniform + Bounded,\n                                           B: SampleBorrow<X>,\n                                           T: Rng>(B, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in the range [`X::min_value()`, `max_exclusive`) with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`X::min_value()`, `max_exclusive`) with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23070,"byte_end":23188,"line_start":146,"line_end":146,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23189,"byte_end":23192,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Panics if X::min_value() == max_exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23193,"byte_end":23239,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23240,"byte_end":23249,"line_start":149,"line_end":149,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23665,"byte_end":23678,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"random_ranged","qualname":"::random_functions::random_ranged","value":"pub fn random_ranged<X: SampleUniform + Bounded, R: RangeBounds<X>>(R) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in a specific range with a new lazily-initialized thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in a specific range with a new lazily-initialized thread-local random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23484,"byte_end":23599,"line_start":161,"line_end":161,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23600,"byte_end":23603,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Panics if the start bound is exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23604,"byte_end":23647,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23648,"byte_end":23657,"line_start":164,"line_end":164,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23954,"byte_end":23976,"line_start":173,"line_end":173,"column_start":8,"column_end":30},"name":"random_ranged_with_rng","qualname":"::random_functions::random_ranged_with_rng","value":"pub fn random_ranged_with_rng<X: SampleUniform + Bounded, R: RangeBounds<X>,\n                              T: Rng>(R, &mut T) -> X","parent":null,"children":[],"decl_id":null,"docs":" Generate a random value in a specific range with an existing random number generator.","sig":null,"attributes":[{"value":"/ Generate a random value in a specific range with an existing random number generator.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23799,"byte_end":23888,"line_start":169,"line_end":169,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23889,"byte_end":23892,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Panics if the start bound is exclusive.","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23893,"byte_end":23936,"line_start":171,"line_end":171,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/korocouille/.cargo/registry/src/github.com-1ecc6299db9ec823/random-number-0.1.6/src/random_functions.rs","byte_start":23937,"byte_end":23946,"line_start":172,"line_end":172,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}